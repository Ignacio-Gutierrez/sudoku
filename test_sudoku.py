from game import sudoku_back

import unittest

class test_sudoku(unittest.TestCase):

    def test_matriz_9x9(self):
        sudoku = sudoku_back()
        self.assertEqual(sudoku.board, [[' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' ']])

    def test_agregar_numero(self):
        sudoku = sudoku_back()
        sudoku.put_number(1, 1, 1)
        self.assertEqual(sudoku.board, [['1', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' ']])

    def test_agregar_numero2(self):
        sudoku = sudoku_back()
        sudoku.put_number(1, 1, 1)
        sudoku.put_number(9, 1, 8)
        self.assertEqual(sudoku.board, [['1', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                                        ['8', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' ']])

    def test_fila_fuera_de_rango(self):
        sudoku = sudoku_back()
        self.assertEqual(sudoku.put_number(10, 9, 1), None)

    def test_fila_equal(self):
        sudoku = sudoku_back()
        sudoku.board = [['1', ' ', ' ', ' ', ' ', ' ', ' ', ' ','1'], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' ']]
        self.assertEqual(sudoku.rep(1, 1), False)

    def test_fila_no_equal(self):
        sudoku = sudoku_back()
        sudoku.put_number(1, 1, 1)
        sudoku.put_number(1, 9, 2)
        self.assertEqual(sudoku.board, [['1', ' ', ' ', ' ', ' ', ' ', ' ', ' ','2'], 
                                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' ']])
        self.assertEqual(sudoku.rep(1, 1), True)


    def test_columna_equal(self):
        sudoku = sudoku_back()
        sudoku.board = [[' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ','1'], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ','1']]
        self.assertEqual(sudoku.rep(9, 9), False)

    def test_columna_no_equal(self):
        sudoku = sudoku_back()
        sudoku.put_number(1, 4, 1)
        sudoku.put_number(9, 4, 2)
        self.assertEqual(sudoku.board, [[' ', ' ', ' ', '1', ' ', ' ', ' ', ' ',' '], 
                                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                                        [' ', ' ', ' ', '2', ' ', ' ', ' ', ' ',' ']])
        self.assertEqual(sudoku.rep(1, 4), True)

    def test_matriz_1x1_equal(self):
        sudoku = sudoku_back()
        sudoku.board = [['1', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', '1', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' ']]
        self.assertEqual(sudoku.rep(1, 1), False)

    def test_matriz_1x2_equal(self):
        sudoku = sudoku_back()
        sudoku.board = [[' ', ' ', ' ', ' ', '2', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', '2', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' ']]
        self.assertEqual(sudoku.rep(2, 4), False)

    def test_matriz_1x3_equal(self):
        sudoku = sudoku_back()
        sudoku.board = [[' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', '3',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', '3', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' ']]
        self.assertEqual(sudoku.rep(2, 8), False)

    def test_matriz_2x1_equal(self):
        sudoku = sudoku_back()
        sudoku.board = [[' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', '5', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        ['5', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' ']]
        self.assertEqual(sudoku.rep(6, 1), False)

    def test_matriz_2x2_equal(self):
        sudoku = sudoku_back()
        sudoku.board = [[' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', '1', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', '1', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' ']]
        self.assertEqual(sudoku.rep(4, 4), False)

    def test_matriz_2x3_equal(self):
        sudoku = sudoku_back()
        sudoku.board = [[' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', '8',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', '8', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' ']]
        self.assertEqual(sudoku.rep(5, 8), False)

    def test_matriz_3x1_equal(self):
        sudoku = sudoku_back()
        sudoku.board = [[' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', '1', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        ['1', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' ']]
        self.assertEqual(sudoku.rep(9, 1), False)

    def test_matriz_3x2_equal(self):
        sudoku = sudoku_back()
        sudoku.board = [[' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', '1', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', '1', ' ', ' ',' ']]
        self.assertEqual(sudoku.rep(9, 6), False)

    def test_matriz_3x3_equal(self):
        sudoku = sudoku_back()
        sudoku.board = [[' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', '2',' '], 
                        [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ','2']]
        self.assertEqual(sudoku.rep(9, 9), False)
    
    def test_matriz_winner(self):
        sudoku = sudoku_back()
        sudoku.board = [['1', '2', '3', '4', '5', '6', '7', '8','9'], 
                        ['7', '8', '9', '1', '2', '3', '4', '5','6'], 
                        ['4', '5', '6', '7', '8', '9', '1', '2','3'], 
                        ['3', '1', '2', '6', '4', '5', '9', '7','8'], 
                        ['9', '7', '8', '3', '1', '2', '6', '4','5'], 
                        ['6', '4', '5', '9', '7', '8', '3', '1','2'], 
                        ['2', '3', '1', '5', '6', '4', '8', '9','7'], 
                        ['8', '9', '7', '2', '3', '1', '5', '6','4'], 
                        ['5', '6', '4', '8', '9', '7', '2', '3','1']]
        self.assertEqual(sudoku.rep(9, 9), 'Ganaste')

if __name__ == '__main__':
    unittest.main()